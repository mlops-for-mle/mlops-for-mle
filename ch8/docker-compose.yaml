version: "3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:29092
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081

  connect:
    build:
      context: ./docker/connect
      dockerfile: Dockerfile
    container_name: connect
    depends_on:
      - broker
      - schema-registry
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker:29092
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: docker-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components

  source-postgres-server:
    image: postgres:14.0
    container_name: source-postgres-server
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: sourceuser
      POSTGRES_PASSWORD: sourcepassword
      POSTGRES_DB: sourcedatabase
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-U", "sourceuser", "-d", "sourcedatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  source-data-generator:
    platform: linux/amd64
    build:
      context: ./docker/source
      dockerfile: Dockerfile
    container_name: source-data-generator
    depends_on:
      source-postgres-server:
        condition: service_healthy

  sink-postgres-server:
    image: postgres:14.0
    container_name: sink-postgres-server
    depends_on:
      - source-data-generator
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: sinkuser
      POSTGRES_PASSWORD: sinkpassword
      POSTGRES_DB: sinkdatabase
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-U", "sinkuser", "-d", "sinkdatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  sink-data-subscriber:
    platform: linux/amd64
    build:
      context: ./docker/sink
      dockerfile: Dockerfile
    container_name: sink-data-subscriber
    depends_on:
      sink-postgres-server:
        condition: service_healthy

  api-with-model:
    platform: linux/amd64
    build:
      context: ./docker/api
      dockerfile: Dockerfile
    container_name: api-with-model
    ports:
      - 8000:8000
